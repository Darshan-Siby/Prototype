/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package prototype;

import com.mpatric.mp3agic.ID3v2;
import com.mpatric.mp3agic.InvalidDataException;
import com.mpatric.mp3agic.Mp3File;
import com.mpatric.mp3agic.UnsupportedTagException;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
//import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.farng.mp3.TagException;
import org.farng.mp3.id3.ID3v1;
import javax.imageio.ImageIO;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Mixer;
import javax.sound.sampled.Port;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
//import org.farng.mp3.MP3File;
import javax.swing.Timer;
import org.farng.mp3.MP3File;


/**
 *
 * @author Kuncheria
 */
public class NewJFrame extends javax.swing.JFrame {
    Prototype p =new Prototype();

    public NewJFrame() {
        initComponents();
        volumelevel.setText(String.valueOf(volumectrl.getValue())+"%");
        p.volChange(volumectrl.getValue());
        
        ActionListener updateSeekBar = new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                //throw new UnsupportedOperationException("Not supported yet.");
                p.slider(seekbar);
            }
            
        };
        Timer timer=new Timer(200,updateSeekBar);
        timer.start();
        
        seekbar.addMouseListener(new MouseAdapter() {            
    public void mouseClicked(MouseEvent e) {
       int v = seekbar.getValue();
       //jlabel.setText("----"+v);

       //Retrieves the mouse position relative to the component origin.
       int mouseX = e.getX();

       //Computes how far along the mouse is relative to the component width then multiply it by the progress bar's maximum value.
       int progressBarVal = (int)Math.round(((double)mouseX / (double)seekbar.getWidth()) * seekbar.getMaximum());

       //seekbar.setValue(progressBarVal);
       p.pause();
       p.seekTo(progressBarVal);
  }                                     
});
     } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        play = new javax.swing.JButton();
        paause = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        open = new javax.swing.JButton();
        artist = new javax.swing.JLabel();
        year = new javax.swing.JLabel();
        genere = new javax.swing.JLabel();
        album = new javax.swing.JLabel();
        titlename = new javax.swing.JLabel();
        icn = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 1), new java.awt.Dimension(0, 1), new java.awt.Dimension(32767, 1));
        volumectrl = new javax.swing.JSlider();
        volumelevel = new javax.swing.JLabel();
        seekbar = new javax.swing.JProgressBar();
        eqz = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        play.setText("play");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        paause.setText("pause");
        paause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paauseActionPerformed(evt);
            }
        });

        stop.setText("stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        open.setText("open");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        artist.setText("Artist");

        year.setText("year");

        genere.setText("genere");

        album.setText("Album");

        titlename.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titlename.setText("TITLE");

        volumectrl.setOrientation(javax.swing.JSlider.VERTICAL);
        volumectrl.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volumectrlStateChanged(evt);
            }
        });

        seekbar.setMaximum(200);
        seekbar.setVerifyInputWhenFocusTarget(false);
        seekbar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seekbarMouseClicked(evt);
            }
        });

        eqz.setText("Equlizer");
        eqz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqzActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(play)
                .addGap(10, 10, 10)
                .addComponent(paause)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eqz)
                .addGap(41, 41, 41)
                .addComponent(open)
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(icn, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(artist, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(year, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(album, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(genere, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(titlename, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(volumectrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(volumelevel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(seekbar, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 67, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(icn, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(volumelevel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(volumectrl, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(titlename)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(artist)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(album)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(year)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(genere)))))
                .addGap(50, 50, 50)
                .addComponent(seekbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(play)
                    .addComponent(paause)
                    .addComponent(stop)
                    .addComponent(open)
                    .addComponent(eqz))
                .addGap(44, 44, 44)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        // TODO add your handling code here:
        p.resume();
    }//GEN-LAST:event_playActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        p.stop();
    }//GEN-LAST:event_stopActionPerformed

    private void paauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paauseActionPerformed
        // TODO add your handling code here:
        p.pause();
    }//GEN-LAST:event_paauseActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
     
        FileNameExtensionFilter filter= new FileNameExtensionFilter("MP3 Files","mp3","mpeg3");
        JFileChooser chooser = new JFileChooser("C:\\Users\\hp\\Music");
        chooser.addChoosableFileFilter(filter);
        int returnval = chooser.showOpenDialog(null);
        if(returnval==JFileChooser.APPROVE_OPTION){
            p.stop();
            File f=chooser.getSelectedFile();
            String song=f+"";
            try {
                MP3File  mpf =new MP3File(f);
                Mp3File  mpf2 =new Mp3File(song);
                String title = new String();
                ID3v1 id=new ID3v1();             
                id=mpf.getID3v1Tag();
                //title=String.valueOf(mpf.getID3v1Tag());
                titlename.setText(id.getSongTitle());
                artist.setText(id.getArtist());
                album.setText(id.getAlbumTitle());
                year.setText(id.getYearReleased());
                genere.setText(String.valueOf(id.getGenre()));
               if(mpf2.hasId3v2Tag()){
                ID3v2 id3v2tag = mpf2.getId3v2Tag();
                    byte[] imageData = id3v2tag.getAlbumImage();
                    if (imageData!=null){
                        System.out.println("debug:: imageData is not null");
                        BufferedImage img = ImageIO.read(new ByteArrayInputStream(imageData));
                        ImageIcon icon = new ImageIcon(img);
                        Image i=icon.getImage();
                        i=i.getScaledInstance(234, 234,java.awt.Image.SCALE_SMOOTH);
                        icon=new ImageIcon(i);
                        icn.setIcon(icon);
                    }
                    }
            } catch (    UnsupportedTagException | InvalidDataException | IOException | TagException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            p.play(song);
            
        }
    }//GEN-LAST:event_openActionPerformed

    private void volumectrlStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumectrlStateChanged
        // TODO add your handling code here:
     p.volChange(volumectrl.getValue());
     volumelevel.setText(String.valueOf(volumectrl.getValue())+"%");
    }//GEN-LAST:event_volumectrlStateChanged

    private void seekbarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seekbarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_seekbarMouseClicked

    private void eqzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqzActionPerformed
        // TODO add your handling code here:
        EquilizerUI e =new EquilizerUI();
                e.setVisible(true);
    }//GEN-LAST:event_eqzActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel album;
    private javax.swing.JLabel artist;
    private javax.swing.JButton eqz;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel genere;
    private javax.swing.JLabel icn;
    private javax.swing.JButton open;
    private javax.swing.JButton paause;
    private javax.swing.JButton play;
    private javax.swing.JProgressBar seekbar;
    private javax.swing.JButton stop;
    private javax.swing.JLabel titlename;
    private javax.swing.JSlider volumectrl;
    private javax.swing.JLabel volumelevel;
    private javax.swing.JLabel year;
    // End of variables declaration//GEN-END:variables
}
